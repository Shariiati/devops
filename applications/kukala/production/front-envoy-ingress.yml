apiVersion: v1
kind: Service
metadata:
  name: kukala-envoy-ingress
  namespace: kukala
  labels:
    app: kukala-envoy-ingress
spec:
  ports:
    - name: http
      port: 80
      targetPort: 80    
    - name: prometheus
      port: 8080
      targetPort: 8080

  selector:
    app: kukala-envoy-ingress
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kukala-envoy-ingress
  namespace: kukala
data:
  envoy-yaml: |
    admin:
      access_log_path: /dev/stdout
      address:
        socket_address: { protocol: TCP, address: 0.0.0.0, port_value: 9092 }
    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address: { address: 0.0.0.0, port_value: 80 }
        filter_chains:
        - filters:                 
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              access_log:
                - name: envoy.access_loggers.file
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                    path: "/dev/stdout"
                    typed_json_format: 
                      "@timestamp": "%START_TIME%"
                      client.address: "%DOWNSTREAM_REMOTE_ADDRESS%"
                      client.local.address: "%DOWNSTREAM_LOCAL_ADDRESS%"
                      envoy.route.name: "%ROUTE_NAME%"
                      envoy.upstream.cluster: "%UPSTREAM_CLUSTER%"
                      host.hostname: "%HOSTNAME%"
                      http.request.body.bytes: "%BYTES_RECEIVED%"
                      http.request.duration: "%DURATION%"
                      http.downstream.request.duration: "%REQUEST_DURATION%"
                      http.upstream.request.duration: "%REQUEST_TX_DURATION%"
                      http.upstream.firstbyterequest.duration: "%RESPONSE_DURATION%"
                      http.request.headers.accept: "%REQ(ACCEPT)%"
                      http.request.headers.authority: "%REQ(:AUTHORITY)%"
                      #  http.request.headers.id: "%REQ(X-REQUEST-ID)%"
                      http.request.headers.x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                      http.request.headers.x_forwarded_proto: "%REQ(X-FORWARDED-PROTO)%"
                      http.request.headers.x_b3_traceid: "%REQ(X-B3-TRACEID)%"
                      http.request.headers.x_b3_parentspanid: "%REQ(X-B3-PARENTSPANID)%"
                      http.request.headers.x_b3_spanid: "%REQ(X-B3-SPANID)%"
                      http.request.headers.x_b3_sampled: "%REQ(X-B3-SAMPLED)%"
                      http.request.headers.canary: "%REQ(canary)%"                      
                      http.request.method: "%REQ(:METHOD)%"
                      http.request.path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                      http.response.body.bytes: "%BYTES_SENT%"
                      http.response.flags: "%RESPONSE_FLAGS%"
                      http.responsecode: "%RESPONSE_CODE%"
                      http.response.code.details: "%RESPONSE_CODE_DETAILS%"
                      #  service.name: "envoy"
                      service.version: "1.16"
              codec_type: AUTO
              stat_prefix: http_80
              route_config:
                name: local_route
                virtual_hosts:
                  - name: prod_kukala_ir
                    domains: ["prod.kukala.ir"]
                    routes:
                      - match:
                          prefix: /panel
                        route:
                          cluster: kukala_admin_cl
                      - match:
                          prefix: /
                          headers:
                          - name: "User-Agent"                      
                            safe_regex_match:
                              google_re2: {}
                              regex: ".*Mobile.*"     
                        route:
                          cluster: kukala_mobile_cl
                          prefix_rewrite: "/"
                      - match:
                          prefix: /
                        route:
                          cluster: kukala_desktop_cl
                          prefix_rewrite: "/"

              http_filters:                           
              - name: envoy.filters.http.router
              
      - name: listener_1
        address:
          socket_address: { address: 0.0.0.0, port_value: 8080 }
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              access_log:
                - name: envoy.access_loggers.file
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                    path: /dev/stdout
              codec_type: AUTO
              stat_prefix: http_8080
              route_config:
                name: local_route
                virtual_hosts:
                  - name: local_service
                    domains: ["*"]
                    routes:
                      - match:
                          prefix: "/metrics"
                        route:
                            cluster: envoy-kukala
                            prefix_rewrite: "/stats/prometheus"
              http_filters:
              - name: envoy.filters.http.router



      clusters:
        - name: envoy-kukala
          connect_timeout: 0.25s
          type: STATIC
          load_assignment: {
            cluster_name: envoy-kukala,
            endpoints: {
              lb_endpoints: [
                {
                  endpoint: {
                    address: {
                      socket_address: { address: 127.0.0.1, port_value: 9092 }
                    }
                  }
                }
              ]
            }
          }



        - name: kukala_desktop_cl
          connect_timeout: 60s
          circuit_breakers:
            thresholds:
              max_requests: 1000000
              max_connections: 1000000
              max_pending_requests: 10000
          type: strict_dns
          lb_policy: round_robin
          dns_lookup_family: V4_ONLY
          load_assignment:
            cluster_name: kukala_desktop_cl
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: wsps, port_value: 80 }      
        - name: kukala_mobile_cl
          connect_timeout: 5s
          circuit_breakers:
            thresholds:
              max_requests: 1000000
              max_connections: 1000000
              max_pending_requests: 10000
          type: strict_dns
          lb_policy: round_robin
          dns_lookup_family: V4_ONLY
          load_assignment:
            cluster_name: kukala_mobile_cl
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: msps, port_value: 80 }            
        - name: kukala_admin_cl
          connect_timeout: 5s
          circuit_breakers:
            thresholds:
              max_requests: 1000000
              max_connections: 1000000
              max_pending_requests: 10000
          type: strict_dns
          lb_policy: round_robin
          dns_lookup_family: V4_ONLY
          load_assignment:
            cluster_name: kukala_admin_cl
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: wpms, port_value: 80 }  

                           

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kukala-envoy-ingress
  namespace: kukala
spec:
  selector:
    matchLabels:
      app: kukala-envoy-ingress
  replicas: 1
  template:
    metadata:
      labels:
        app: kukala-envoy-ingress
        version: n2
    spec:      
      volumes:
        - name: kukala-envoy-ingress-vol
          configMap:
            name: kukala-envoy-ingress
            items:
              - key: envoy-yaml
                path: envoy.yaml             
      containers:
        - name: kukala-envoy-ingress
          image: docker.sohato.com/envoyproxy/envoy:v1.21.0
          resources:
            requests:
              memory: "1Gi"
              cpu: "1"
            limits:
              memory: "2Gi"
          ports:
            - name: prometheus
              containerPort: 8080
            - name: http
              containerPort: 80
          volumeMounts:
            - name: kukala-envoy-ingress-vol
              readOnly: true
              mountPath: /etc/envoy/envoy.yaml
              subPath: envoy.yaml 
                        
---
# apiVersion: monitoring.coreos.com/v1
# kind: ServiceMonitor
# metadata:
#   name: kukala-envoy-ingress
#   namespace: monitoring
# spec:
#   endpoints:
#   - port: prometheus
#     interval: 5s
#   jobLabel: kukala-envoy-ingress
#   namespaceSelector:
#     matchNames:
#     - gateway
#   selector:
#     matchLabels:
#       app: kukala-envoy-ingress
