server {
    listen 80;
    return 301 https://$host$request_uri;
}

server {

    server_name repo.sohato.com;

    location / {
        proxy_pass http://192.168.103.150:8083;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout  300s;
        client_max_body_size 500m;
        proxy_send_timeout 300s;
    }


    listen 443 ssl;
    ssl_certificate /etc/nginx/ssl/sohato2024.pem;
    ssl_certificate_key /etc/nginx/ssl/sohato2024.key;

}
server {
    listen 80;
    return 301 https://$host$request_uri;
}

server {

    server_name kubectl.sohato.com;

    location / {
        proxy_pass http://192.168.103.150:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade websocket;
        proxy_set_header Connection Upgrade;
        auth_basic "Basic Auth";
        auth_basic_user_file /etc/nginx/auth;
    }


    listen 443 ssl;
    ssl_certificate /etc/nginx/ssl/sohato2024.pem;
    ssl_certificate_key /etc/nginx/ssl/sohato2024.key;

}



#server {
#
#    server_name docker.sohato.com;
#
#    location / {
#        proxy_pass http://192.168.103.150:8082;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Proto $scheme;
#    }
#
#    listen 443 ssl;
#    ssl_certificate /etc/nginx/ssl/sohato.pem;
#    ssl_certificate_key /etc/nginx/ssl/sohato.key;
#
#}
###########################################################
## this configuration was generated by JFrog Artifactory ##
###########################################################

## add ssl entries when https has been set in config
#ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
#ssl_certificate      /etc/nginx/ssl/sohato.key;
#ssl_certificate_key  /etc/nginx/ssl/sohato.pem;
#ssl_session_cache shared:SSL:1m;
#ssl_prefer_server_ciphers   on;
## server configuration
server {
    listen 443 ssl;

    server_name ~(?<repo>.+)\.sohato.com sohato.com;

    if ($http_x_forwarded_proto = '') {
        set $http_x_forwarded_proto  $scheme;
    }
    ## Application specific logs
    ## access_log /var/log/nginx/sohato.com-access.log timing;
    ## error_log /var/log/nginx/sohato.com-error.log;
    rewrite ^/$ /ui/ redirect;
    rewrite ^/ui$ /ui/ redirect;
    rewrite ^/(v1|v2)/(.*) /artifactory/api/docker/$repo/$1/$2;
    chunked_transfer_encoding on;
    client_max_body_size 0;
    location / {
    proxy_request_buffering off;
    proxy_http_version 1.1;
    proxy_connect_timeout 1000s;
    proxy_send_timeout  2400s;
    proxy_read_timeout  2400s;
    proxy_pass_header   Server;
    proxy_cookie_path   ~*^/.* /;
#    proxy_buffer_size 128k;
#    proxy_buffers 40 128k;
#    proxy_busy_buffers_size 128k;
    proxy_pass          http://localhost:8082;
    proxy_set_header    X-JFrog-Override-Base-Url $http_x_forwarded_proto://$host:$server_port;
    proxy_set_header    X-Forwarded-Port  $server_port;
    proxy_set_header    X-Forwarded-Proto $http_x_forwarded_proto;
    proxy_set_header    Host              $http_host;
    proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
#    proxy_request_buffering off;
#    proxy_http_version 1.1;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Strict-Transport-Security always;

        location ~ ^/artifactory/ {
            proxy_pass    http://localhost:8081;
        }
    }
}
